apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis.name" . }}
spec:
  selector:
    matchLabels:
      app: {{ include "redis.name" . }}
  replicas: {{ default 1 .Values.app.replicas | int }}
  template:
    metadata:
      labels:
        app: {{ include "redis.name" . }}
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.redis.image.pullPolicy }}
        ports:
        {{ range $key, $val := fromYaml (include "redis.ports" .) -}}
        - name: {{ $key }}
          containerPort: {{ $val }}
        {{ end -}}
      {{- if .Values.redis.persistence.enabled }}
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        emptyDir: {}
      volumeClaimTemplates:
      - metadata:
          name: data
        spec: {{ toYaml .Values.redis.persistence.volumeClaimTemplateSpec | nindent 10 }}
      {{- end }}
    {{- if .Values.redis.tolerations }}
      tolerations: {{ toYaml .Values.redis.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.redis.affinity }}
      affinity: {{ toYaml .Values.redis.affinity | nindent 8 }}
    {{- end }}
    {{- if .Values.redis.nodeSelector }}
      nodeSelector: {{ toYaml .Values.redis.nodeSelector | nindent 8 }}
    {{- end }}
{{- if .Values.redis.strategy }}
  strategy: {{ toYaml .Values.redis.strategy | nindent 4 }}
{{- end }}